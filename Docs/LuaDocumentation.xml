<?xml version="1.0" encoding="UTF-8" ?>

<!-- Before checking the documentation in, make sure that it validates by
     going to http://tools.decisionsoft.com/schemaValidate/ and using
     Lua.xsd for the XML Schema and this file for the XML Instanace. -->

<!-- Using Link:
     To add a link to a function in the current class:
     <Link function='addx'>See addx()</Link>
     To add a link to a function in another class:
     <Link class='ActorFrame' function='propogate'>ActorFrame:propogate()</Link>
     To add a link to a class:
     <Link class='ActorFrame'>ActorFrame</Link>
     To add a link to a global function:
     <Link class='GLOBAL' function='Basename'>Basename()</Link>
     To add a link to an Enum:
     <Link class='ENUM' function='CoinMode'>CoinMode</Link> -->


<Documentation xmlns='http://www.stepmania.com' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.stepmania.com Lua.xsd'>
<!-- Global functions -->
<GlobalFunctions>
<Function name='Basename' return='string' arguments='string path'>
	Returns the base name of file path.
</Function>
<Function name='FormatNumberAndSuffix' return='string' arguments='int num'>
	Returns the number passed to the function followed by its suffix (&quot;th&quot;, &quot;nd&quot;, and so on).
</Function>
</GlobalFunctions>

<!-- Classes -->
<Classes>
<Class name='Actor'>
	<Function name='halign' return='void' arguments='float fAlign'>
		Set the fractional horizontal alignment of the Actor according to <code>fAlign</code> which should be a float in the range 0..1. An alignment of 0 is left aligned while an alignment of 1 is right aligned. See <Link function='horizalign'>horizalign()</Link> for the common case.
	</Function>
	<Function name='horizalign' return='void' arguments='HorizAlign align'>
		Set the horizontal alignment of the Actor according to <code>align</code>. See <Link function='halign'>halign()</Link> for fractional alignment.
	</Function>
	<Function name='valign' return='void' arguments='float fAlign'>
		Set the fractional vertical alignment of the Actor according to <code>fAlign</code> which should be a float in the range 0..1. An alignment of 0 is top aligned while an alignment of 1 is bottom aligned. See <Link function="vertalign">vertalign</Link> for the common case.
	</Function>
	<Function name='vertalign' return='void' arguments='VertAlign align'>
		Set the vertical alignment of the Actor according to <code>align</code>. See <Link function="valign">valign()</Link> for fractional alignment.
	</Function>
	<Function name='x' return='void' arguments='float xPos'>
		Set the x position of the Actor to <code>xPos</code>.
	</Function>
	<Function name='y' return='void' arguments='float yPos'>
		Set the y position of the Actor to <code>yPos</code>.
	</Function>
	<Function name='z' return='void' arguments='float zPos'>
		Set the z position of the Actor to <code>zPos</code>.
	</Function>
</Class>
<Class name='ScreenGameplay'>
	<Function name='Center1Player' return='bool' arguments=''>
		Returns <code>true</code> if a single <Link class='Player'>Player</Link> has its NoteField centered.
	</Function>
	<Function name='GetLifeMeter' return='LifeMeter' arguments='PlayerNumber pn'>
		Returns the <Link class='LifeMeter'>LifeMeter</Link> for the specified <Link class='ENUM' function='PlayerNumber'>PlayerNumber</Link> <code>pn</code>.
	</Function>
	<Function name='GetNextCourseSong' return='Song' arguments=''>
		Returns the next <Link class='Song'>Song</Link> in the current <Link class='Course'>Course</Link>.
	</Function>
</Class>
<Class name='Song'>
	<Function name='GetDisplayArtist' return='string' arguments=''>
		Returns the displayed artist of the song.
	</Function>
	<Function name='GetDisplayFullTitle' return='string' arguments=''>
		Returns the displayed full title of the song, including subtitle.
	</Function>
	<Function name='GetDisplayMainTitle' return='string' arguments=''>
		Returns the displayed main title of the song.
	</Function>
	<Function name='GetTranslitArtist' return='string' arguments=''>
		Returns the transliterated artist of the song.
	</Function>
	<Function name='GetTranslitFullTitle' return='string' arguments=''>
		Returns the transliterated full title of the song, including subtitle.
	</Function>
	<Function name='GetTranslitMainTitle' return='string' arguments=''>
		Returns the transliterated main title of the song.
	</Function>
	<Function name='IsLong' return='bool' arguments=''>
		Returns true if the song meets the criteria for a &quot;Long Version&quot;.
	</Function>
	<Function name='IsMarathon' return='bool' arguments=''>
		Returns true if the song meets the criteria for &quot;Marathon&quot; length.
	</Function>
</Class>
</Classes>
</Documentation>
