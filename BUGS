These are all minor bugs and bugs that are either annoying or difficult
to fix.  One purpose of this file is to allow bored developers looking for
something to do a quick list of minor outstanding bugs.  So, if you're
adding something here, try to either 1: make sure it's really a bug, or
2: if it's unconfirmed or unreproducable, say so.  Try not to put subjective
things here, like cosmetic differences that some people don't like (unless
they're actually bugs).

This isn't intended as a replacement for the SF BTS; once we clean that
up and start using it, we might drop this file.

For more minor bugs, grep for "XXX" in the source (but not all of
those are bugs).  Some of those might be duplicated here.

Major bugs are usually either fixed or discussed on the list, so this
list only has minor bugs.


--------

Many menu screens don't tween completely offscreen if a selection is made
before the tween-in finishes.  Easy to fix: don't tween from current loc to
eg. current loc+screen width; always tween to the real dest loc+screen
width.

Selecting in a second player on the select style screen changes the
available options.  If you do that while it's tweening in, the dims
will be adjusted as if there was no tweens; the net result is the change
is wiped out as the tween finishes.  Changing tweenable properties that
have nothing to do with the current tween (eg. here, changing the dim
while we're tweening X,Y) is tricky right now; I'm not sure how to handle
this cleanly ...

***

All pixels have RGB components--even fully transparent ones.  We're
getting odd borders on textures that have a transparent border, because
the RGB component of a fully transparent pixel is being blended with
a non-transparent pixel.  (For example, a picture with a black border
on a black background that has a white, #FFFFFF00 border will have a 
small one-pixel gray border around its real border, since blending
#FFFFFF00 with #000000FF gets something like #AAAAAAAA.)

We can't tell artists to fix the textures; they shouldn't have to worry
about the hidden RGB components in a transparent texel.

We need to do a pass at texture load that iterates over each transparent
pixel, searches the 8 bordering pixels, and sets the color components
to those of a bordering one if any are non-transparent.

Could be slow.

I guess I could write a simple tool for this ... a bit of a pain, though.

***

We'll probably get seaming in tiled backgrounds; the resize filter can't
handle wrapping border pixels instead of clamping them.

Need higher quality rate conversions; 22khz files sound bad.  Don't
give a DESIRED to SDL_sound and do the conversion ourself.

********

CJK characters in the group song list look bad: It's a 20-pixel-high font,
and the CJK font is 16px; it's too small.

The font system can handle this: make another CJK font of a more
appropriate size (20px), call it "_japanese 20px", and import it to
overide the default 16-pixel one.  (It'd probably look better if the
CJK font was too big than too small, so a 24px font may look better
than 16px.)

Need an easier way to make CJK fonts.

